/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\n\n(() => {\n  // Wait for DOM to be fully loaded\n  document.addEventListener('DOMContentLoaded', () => {\n    /* eslint-disable no-new */\n    new _src_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      first: 'wow',\n      third: ''\n    });\n  });\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy1saWJyYXJ5L01ITS9NSE0uanM/ZWQwZiJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJmaXJzdCIsInRoaXJkIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBLENBQUMsTUFBTTtBQUNMO0FBQ0FBLFdBQVNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFNO0FBQ2xEO0FBQ0EsUUFBSSxpREFBSixDQUFRO0FBQ05DLGFBQU8sS0FERDtBQUVOQyxhQUFPO0FBRkQsS0FBUjtBQUlELEdBTkQ7QUFPRCxDQVREIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTUhNIGZyb20gJy4vc3JjL21haW4nXG5cbigoKSA9PiB7XG4gIC8vIFdhaXQgZm9yIERPTSB0byBiZSBmdWxseSBsb2FkZWRcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1uZXcgKi9cbiAgICBuZXcgTUhNKHtcbiAgICAgIGZpcnN0OiAnd293JyxcbiAgICAgIHRoaXJkOiAnJ1xuICAgIH0pXG4gIH0pXG59KSgpXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MHM; });\nclass MHM {\n  constructor(opts) {\n    this.opts = opts;\n\n    // DEFAULTS\n    opts = {\n      first: this.opts.first || 'default value',\n      second: this.opts.second || 'default value',\n      third: this.opts.third || 'default value'\n\n      // ELEMENTS\n    };this.elements = {\n      snappers: {\n        linksList: document.querySelectorAll(`[data-mhm-item=\"snapper\"]`),\n        mainSnapper: document.querySelector('[data-mhm-offset]')\n      },\n      togglers: document.querySelectorAll(`[data-mhm-item=\"toggler\"]`),\n      scrollers: document.querySelector(`[data-mhm-scroll-sections]`)\n\n      /**\n      * Invokes methods based on the availability of the DOM elements they rely on.\n      */\n    };this.methodsLoaded = [];\n\n    this.init();\n\n    // Load message\n    console.info(`%c[MHM Utility Framework loaded: %c${this.methodsLoaded.length ? this.methodsLoaded : 'NO functions loaded'}%c]`, 'color:blue;', 'color:green; font-weight:bold;', 'color:blue;');\n  }\n\n  // UTILS\n\n  /**\n   * Invokes methods based on the availability of the DOM elements they rely on.\n   *\n   * @param {array} elementAndFns - Array of arrays made of elements which if available in\n   * the DOM invoke the method within that same array. (confusing, isn't it?)\n   * @returns {function} - Invokes methods passed to elementsAndFns\n   */\n  invokeIfNeeded(elementAndFns) {\n    elementAndFns.forEach(elementAndFn => {\n      const [el, fn] = elementAndFn;\n\n      if (el && el.length !== 0) {\n        this.methodsLoaded.push(fn.name);\n        return fn.apply(this);\n      }\n    });\n  }\n\n  /**\n   * Invokes the needed methods.\n   *\n   */\n  init() {\n    this.invokeIfNeeded([[this.elements.snappers.linksList, this.snapper], [this.elements.togglers, this.toggler], [this.elements.scrollers, this.scroller]]);\n  }\n\n  /**\n   * Scans the DOM for a 'Snapper' based on the constructor's\n   * {this.elements.snapper.mainSnapper} and adds a click eventListener to each of the snap links\n   * Each links is connected to the snapping position through unique attributes thatneed to match\n   * in order to trigger the snap-to: the former being 'data-mhm-target' and the\n   * latter 'data-mhm-id'. In {this.elements.snapper.mainSnapper} we need to define a\n   * 'data-mhm-offset' that gets the height of the element passed here and adds it to the top but just\n   * if that element, probably a header, is position:fixed\n   */\n  snapper() {\n    const isFixed = el => window.getComputedStyle(el).position === 'fixed',\n          offsetHeight = this.elements.snappers.mainSnapper ? this.elements.snappers.mainSnapper.offsetHeight : 0;\n\n    this.elements.snappers.linksList.forEach(snapper => {\n      const snappersItems = snapper.querySelectorAll('[data-mhm-target]');\n\n      snappersItems.forEach(snappersItem => {\n        snappersItem.addEventListener('click', () => {\n          const targetId = snappersItem.getAttribute('data-mhm-target'),\n                target = document.querySelector(`[data-mhm-id=${targetId}]`),\n                targetPosition = target ? target.getBoundingClientRect().top : 0,\n                mainSnapperTarget = document.querySelector(`#${this.elements.snappers.mainSnapper.getAttribute('data-mhm-offset')}`),\n                topScrollOffset = isFixed(mainSnapperTarget) ? Math.floor(window.pageYOffset + targetPosition - offsetHeight) : Math.floor(window.pageYOffset + targetPosition);\n\n          window.scrollTo({\n            top: topScrollOffset,\n            behavior: 'smooth'\n          });\n        });\n      });\n    });\n  }\n\n  /**\n   * Scans the DOM for 'Togglers' based on the constructor's\n   * {this.elements.togglers} and adds a click eventListener to each of the toggle elements.\n   * Each 'toggler' is connected to an element through unique attributes that\n   * need to match in order to trigger the snap-to: the former being 'data-mhm-target' and the\n   * latter 'data-mhm-id'. The class that needs toggling needs to be defined with an attribute\n   * being 'data-mhm-class'\n   */\n  toggler() {\n    this.elements.togglers.forEach(toggler => {\n      const targetId = toggler.getAttribute('data-mhm-target'),\n            classToToggle = toggler.getAttribute('data-mhm-class'),\n            target = document.querySelector(`[data-mhm-id=${targetId}]`);\n      toggler.addEventListener('click', () => {\n        target.classList.toggle(classToToggle);\n      });\n    });\n  }\n\n  scroller() {\n    let currentSection = '1';\n    const sections = this.elements.scrollers.querySelectorAll('[data-mhm-scroll-section]'),\n          offsetElement = document.querySelector(this.elements.scrollers.getAttribute('data-mhm-scroll-offset-element')),\n          offset = offsetElement ? offsetElement.clientHeight : 0,\n          arrows = document.querySelectorAll('[data-mhm-scroll-arrow]'),\n          lastSection = sections.length,\n          arrowUp = document.querySelector('[data-mhm-scroll-arrow=\"up\"]'),\n          arrowDown = document.querySelector('[data-mhm-scroll-arrow=\"down\"]'),\n          setCurrentSection = () => {\n      sections.forEach(section => {\n        const distanceFromTop = section.getBoundingClientRect().top - offset + window.scrollY,\n              sectionHeight = section.clientHeight;\n        // Update current section with the next one when going beyond 75% of the height of the section\n        if (distanceFromTop - sectionHeight * 0.25 <= window.scrollY) {\n          currentSection = section.getAttribute('data-mhm-scroll-section');\n        }\n\n        // DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG\n        // document.querySelector('.header__brand a').innerHTML = currentSection\n        // DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG-DEBUG\n      });\n      toggleArrows();\n    },\n          jumpTo = arrow => {\n      const direction = arrow.getAttribute('data-mhm-scroll-arrow'),\n            down = direction === 'down',\n            up = direction === 'up';\n      if (down && Number(currentSection) !== lastSection) {\n        currentSection = `${Number(currentSection) + 1}`;\n      } else if (up && Number(currentSection) !== 1) {\n        currentSection = `${Number(currentSection) - 1}`;\n      }\n      window.scrollTo({\n        top: document.querySelector(`[data-mhm-scroll-section=\"${currentSection}\"]`).getBoundingClientRect().top - offset + window.scrollY,\n        behavior: 'smooth'\n      });\n    },\n          toggleArrows = () => {\n      console.log('arrowstoggled');\n      if (Number(currentSection) === 1) {\n        arrowUp.style.opacity = 0;\n      } else if (Number(currentSection) === lastSection) {\n        arrowDown.style.opacity = 0;\n      } else {\n        arrowUp.style.opacity = 1;\n        arrowDown.style.opacity = 1;\n      }\n    },\n          populateSectionId = (section, i) => {\n      section.setAttribute('data-mhm-scroll-section', i);\n    };\n    // Display/Hide arrows on load\n    window.addEventListener('DOMContentLoaded', () => toggleArrows());\n    // Debounced current section updater\n    window.addEventListener('scroll', () => setCurrentSection());\n    // Add click listener to arrows\n    arrows.forEach(arrow => {\n      arrow.addEventListener('click', e => jumpTo(arrow));\n    });\n    // Populate sections id dynamically\n    sections.forEach((section, i) => populateSectionId(section, i + 1));\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);