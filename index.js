!function(Q){var n={};function I(F){if(n[F])return n[F].exports;var s=n[F]={i:F,l:!1,exports:{}};return Q[F].call(s.exports,s,s.exports,I),s.l=!0,s.exports}I.m=Q,I.c=n,I.d=function(Q,n,F){I.o(Q,n)||Object.defineProperty(Q,n,{enumerable:!0,get:F})},I.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},I.t=function(Q,n){if(1&n&&(Q=I(Q)),8&n)return Q;if(4&n&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var F=Object.create(null);if(I.r(F),Object.defineProperty(F,"default",{enumerable:!0,value:Q}),2&n&&"string"!=typeof Q)for(var s in Q)I.d(F,s,function(n){return Q[n]}.bind(null,s));return F},I.n=function(Q){var n=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return I.d(n,"a",n),n},I.o=function(Q,n){return Object.prototype.hasOwnProperty.call(Q,n)},I.p="",I(I.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./js-library/MHM/functions/MHM_select_id.js\nconst MHM_select_id = selector => {\n    const id = Array.from(document.querySelectorAll(`[data-mhm-id=${selector}]`))[0];\n    return id;\n};\n\n\n// CONCATENATED MODULE: ./js-library/MHM/functions/MHM_items.js\nconst MHM_items = () => {\n    const targets = {\n        togglers: Array.from(document.querySelectorAll(`[data-mhm-item=\"toggler\"]`)),\n        snappers: Array.from(document.querySelectorAll(`[data-mhm-item=\"snapper\"]`))\n    };\n    return targets;\n};\n\n\n// CONCATENATED MODULE: ./js-library/MHM/functions/MHM_toggler.js\n\n\n\nconst MHM_toggler = () => {\n    const togglers = MHM_items().togglers;\n    togglers.forEach(toggler => {\n        const targetId = toggler.getAttribute('data-mhm-target');\n        const classToToggle = toggler.getAttribute('data-mhm-class');\n        const target = MHM_select_id(targetId);\n        toggler.addEventListener('click', () => {\n            target.classList.toggle(classToToggle);\n        });\n    });\n};\n\n\n// CONCATENATED MODULE: ./js-library/MHM/utils/isFixed.js\nconst isFixed = el => {\n  const position = getComputedStyle(el).position;\n  return position === 'fixed' || false;\n};\n\n/* harmony default export */ var utils_isFixed = (isFixed);\n// CONCATENATED MODULE: ./js-library/MHM/functions/MHM_snapper.js\n\n\n\n\nconst MHM_snapper = () => {\n    const snappers = MHM_items().snappers,\n          mainSnapper = document.querySelector('[data-mhm-offset]'),\n          offsetHeightElement = document.querySelector(mainSnapper.getAttribute('data-mhm-offset')),\n          offsetHeight = offsetHeightElement.offsetHeight;\n\n    snappers.forEach(snapper => {\n        const snappersItems = snapper.querySelectorAll('[data-mhm-target]');\n        snappersItems.forEach(snappersItem => {\n            snappersItem.addEventListener('click', () => {\n                const targetId = snappersItem.getAttribute('data-mhm-target'),\n                      target = MHM_select_id(targetId),\n                      targetPosition = target ? target.getBoundingClientRect().top : 0;\n\n                window.scrollTo({\n                    top: utils_isFixed(offsetHeightElement) ? Math.floor(window.pageYOffset + targetPosition - offsetHeight) : Math.floor(window.pageYOffset + targetPosition),\n                    behavior: \"smooth\"\n                });\n            });\n        });\n    });\n};\n\n\n// CONCATENATED MODULE: ./js-library/MHM/MHM.js\n\n\n\n(() => {\n    // Init message\n    console.info('%c[MHM Utility Framework:' + '%c Loaded' + '%c]', 'color:blue;', 'color:green; font-weight:bold;', 'color:blue;');\n    //Utilities, to be executed when the window has loaded\n    window.addEventListener('load', () => {\n        MHM_toggler();\n        MHM_snapper();\n    });\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy1saWJyYXJ5L01ITS9mdW5jdGlvbnMvTUhNX3NlbGVjdF9pZC5qcz9mODBhIiwid2VicGFjazovLy8uL2pzLWxpYnJhcnkvTUhNL2Z1bmN0aW9ucy9NSE1faXRlbXMuanM/NjQ1NCIsIndlYnBhY2s6Ly8vLi9qcy1saWJyYXJ5L01ITS9mdW5jdGlvbnMvTUhNX3RvZ2dsZXIuanM/NTVlMyIsIndlYnBhY2s6Ly8vLi9qcy1saWJyYXJ5L01ITS91dGlscy9pc0ZpeGVkLmpzP2I0OGYiLCJ3ZWJwYWNrOi8vLy4vanMtbGlicmFyeS9NSE0vZnVuY3Rpb25zL01ITV9zbmFwcGVyLmpzP2FkYzAiLCJ3ZWJwYWNrOi8vLy4vanMtbGlicmFyeS9NSE0vTUhNLmpzP2VkMGYiXSwibmFtZXMiOlsiTUhNX3NlbGVjdF9pZCIsInNlbGVjdG9yIiwiaWQiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJNSE1faXRlbXMiLCJ0YXJnZXRzIiwidG9nZ2xlcnMiLCJzbmFwcGVycyIsIk1ITV90b2dnbGVyIiwiZm9yRWFjaCIsInRvZ2dsZXIiLCJ0YXJnZXRJZCIsImdldEF0dHJpYnV0ZSIsImNsYXNzVG9Ub2dnbGUiLCJ0YXJnZXQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiaXNGaXhlZCIsImVsIiwicG9zaXRpb24iLCJnZXRDb21wdXRlZFN0eWxlIiwiTUhNX3NuYXBwZXIiLCJtYWluU25hcHBlciIsInF1ZXJ5U2VsZWN0b3IiLCJvZmZzZXRIZWlnaHRFbGVtZW50Iiwib2Zmc2V0SGVpZ2h0Iiwic25hcHBlciIsInNuYXBwZXJzSXRlbXMiLCJzbmFwcGVyc0l0ZW0iLCJ0YXJnZXRQb3NpdGlvbiIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIndpbmRvdyIsInNjcm9sbFRvIiwiTWF0aCIsImZsb29yIiwicGFnZVlPZmZzZXQiLCJiZWhhdmlvciIsImNvbnNvbGUiLCJp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QUFLO0FBQ2pDUCxRQUFBLFdBQUFBO0FBQ0FjLFFBQUEsV0FBQUE7QUFDSCxLQUhEO0FBSUgsQ0FSRCIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTUhNX3NlbGVjdF9pZCA9IHNlbGVjdG9yID0+IHtcbiAgICBjb25zdCBpZCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtbWhtLWlkPSR7c2VsZWN0b3J9XWApKVswXVxuICAgIHJldHVybiBpZFxufVxuXG5leHBvcnQge01ITV9zZWxlY3RfaWR9IiwiY29uc3QgTUhNX2l0ZW1zID0gKCkgPT4ge1xuICAgIGNvbnN0IHRhcmdldHMgPSB7XG4gICAgICAgIHRvZ2dsZXJzOiBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFtkYXRhLW1obS1pdGVtPVwidG9nZ2xlclwiXWApKSxcbiAgICAgICAgc25hcHBlcnM6IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtbWhtLWl0ZW09XCJzbmFwcGVyXCJdYCkpLFxuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0c1xufVxuXG5leHBvcnQge01ITV9pdGVtc31cbiIsImltcG9ydCB7TUhNX3NlbGVjdF9pZH0gZnJvbSAnLi9NSE1fc2VsZWN0X2lkJ1xuaW1wb3J0IHtNSE1faXRlbXN9IGZyb20gJy4vTUhNX2l0ZW1zJ1xuXG5jb25zdCBNSE1fdG9nZ2xlciA9ICgpPT4ge1xuICAgIGNvbnN0IHRvZ2dsZXJzID0gTUhNX2l0ZW1zKCkudG9nZ2xlcnNcbiAgICB0b2dnbGVycy5mb3JFYWNoKHRvZ2dsZXIgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXRJZCA9IHRvZ2dsZXIuZ2V0QXR0cmlidXRlKCdkYXRhLW1obS10YXJnZXQnKVxuICAgICAgICBjb25zdCBjbGFzc1RvVG9nZ2xlID0gdG9nZ2xlci5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWhtLWNsYXNzJylcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gTUhNX3NlbGVjdF9pZCh0YXJnZXRJZClcbiAgICAgICAgdG9nZ2xlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT4ge1xuICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoY2xhc3NUb1RvZ2dsZSlcbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQge01ITV90b2dnbGVyfVxuIiwiY29uc3QgaXNGaXhlZCA9IGVsID0+IHtcbiAgY29uc3QgcG9zaXRpb24gPSBnZXRDb21wdXRlZFN0eWxlKGVsKS5wb3NpdGlvblxuICByZXR1cm4gcG9zaXRpb24gPT09ICdmaXhlZCcgfHwgZmFsc2Vcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNGaXhlZCIsImltcG9ydCB7TUhNX3NlbGVjdF9pZH0gZnJvbSAnLi9NSE1fc2VsZWN0X2lkJ1xuaW1wb3J0IHtNSE1faXRlbXN9IGZyb20gJy4vTUhNX2l0ZW1zJ1xuaW1wb3J0IGlzRml4ZWQgZnJvbSAnLi4vdXRpbHMvaXNGaXhlZCdcblxuY29uc3QgTUhNX3NuYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgc25hcHBlcnMgPSBNSE1faXRlbXMoKS5zbmFwcGVycyxcbiAgICAgICAgICBtYWluU25hcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1obS1vZmZzZXRdJyksXG4gICAgICAgICAgb2Zmc2V0SGVpZ2h0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobWFpblNuYXBwZXIuZ2V0QXR0cmlidXRlKCdkYXRhLW1obS1vZmZzZXQnKSksXG4gICAgICAgICAgb2Zmc2V0SGVpZ2h0ID0gb2Zmc2V0SGVpZ2h0RWxlbWVudC5vZmZzZXRIZWlnaHRcblxuICAgIHNuYXBwZXJzLmZvckVhY2goc25hcHBlciA9PiB7XG4gICAgICAgIGNvbnN0IHNuYXBwZXJzSXRlbXMgPSBzbmFwcGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1obS10YXJnZXRdJylcbiAgICAgICAgc25hcHBlcnNJdGVtcy5mb3JFYWNoKHNuYXBwZXJzSXRlbSA9PiB7XG4gICAgICAgICAgICBzbmFwcGVyc0l0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0SWQgPSBzbmFwcGVyc0l0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLW1obS10YXJnZXQnKSxcbiAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBNSE1fc2VsZWN0X2lkKHRhcmdldElkKSxcbiAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRQb3NpdGlvbiA9IHRhcmdldCA/IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgOiAwXG5cbiAgICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oe1xuICAgICAgICAgICAgICAgICAgICB0b3A6IGlzRml4ZWQob2Zmc2V0SGVpZ2h0RWxlbWVudCkgP1xuICAgICAgICAgICAgICAgICAgICBNYXRoLmZsb29yKHdpbmRvdy5wYWdlWU9mZnNldCArIHRhcmdldFBvc2l0aW9uIC0gb2Zmc2V0SGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICA6IE1hdGguZmxvb3Iod2luZG93LnBhZ2VZT2Zmc2V0ICsgdGFyZ2V0UG9zaXRpb24pLFxuICAgICAgICAgICAgICAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIlxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuZXhwb3J0IHtNSE1fc25hcHBlcn1cbiIsImltcG9ydCB7TUhNX3RvZ2dsZXJ9IGZyb20gJy4vZnVuY3Rpb25zL01ITV90b2dnbGVyJ1xuaW1wb3J0IHtNSE1fc25hcHBlcn0gZnJvbSAnLi9mdW5jdGlvbnMvTUhNX3NuYXBwZXInXG5cbigoKT0+e1xuICAgIC8vIEluaXQgbWVzc2FnZVxuICAgIGNvbnNvbGUuaW5mbygnJWNbTUhNIFV0aWxpdHkgRnJhbWV3b3JrOicrJyVjIExvYWRlZCcrJyVjXScsJ2NvbG9yOmJsdWU7JywnY29sb3I6Z3JlZW47IGZvbnQtd2VpZ2h0OmJvbGQ7JywnY29sb3I6Ymx1ZTsnKVxuICAgIC8vVXRpbGl0aWVzLCB0byBiZSBleGVjdXRlZCB3aGVuIHRoZSB3aW5kb3cgaGFzIGxvYWRlZFxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCk9PiB7XG4gICAgICAgIE1ITV90b2dnbGVyKClcbiAgICAgICAgTUhNX3NuYXBwZXIoKVxuICAgIH0pXG59KSgpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")}]);